import { Middleware } from '@curveball/core';
declare type Dispatcher = {
    delete: (mw: Middleware) => Dispatcher;
    get: (mw: Middleware) => Dispatcher;
    head: (mw: Middleware) => Dispatcher;
    options: (mw: Middleware) => Dispatcher;
    patch: (mw: Middleware) => Dispatcher;
    post: (mw: Middleware) => Dispatcher;
    put: (mw: Middleware) => Dispatcher;
} & Middleware;
/**
 * The route function creates a route middleware.
 *
 * Pass a path and a middleware. The passed midldleware will be called if the
 * path matched.
 *
 * Example:
 *
 * app.use(route('/foo/bar', (ctx, next) => {
 *
 *   // This middleware will get called if the route matched.
 *
 * });
 */
export default function route(path: string, middleware: Middleware): Middleware;
export default function route(path: string): Dispatcher;
export {};
