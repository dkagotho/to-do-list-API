"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const http_errors_1 = require("@curveball/http-errors");
const qs = require("querystring");
function bodyParser() {
    return async (ctx, next) => {
        await parse(ctx);
        return next();
    };
}
exports.default = bodyParser;
function parse(ctx) {
    if (ctx.request.is('json')) {
        return parseJson(ctx);
    }
    if (ctx.request.is('x-www-form-urlencoded')) {
        return parseUrlEncoded(ctx);
    }
    if (ctx.request.type.startsWith('text/')) {
        return parseText(ctx);
    }
    return Promise.resolve();
}
async function parseJson(ctx) {
    const body = await ctx.request.rawBody('utf-8');
    if (body) {
        try {
            ctx.request.body = JSON.parse(body);
        }
        catch (e) {
            throw new http_errors_1.BadRequest('Unable to parse JSON: ' + e.message);
        }
    }
    else {
        ctx.request.body = {};
    }
}
async function parseText(ctx) {
    ctx.request.body = await ctx.request.rawBody('utf-8');
}
async function parseUrlEncoded(ctx) {
    ctx.request.body = qs.parse(await ctx.request.rawBody('utf-8'));
}
//# sourceMappingURL=index.js.map