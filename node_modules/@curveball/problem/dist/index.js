"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const http_errors_1 = require("@curveball/http-errors");
function default_1(settings) {
    let debugMode = false;
    if (settings && settings.debug !== undefined) {
        debugMode = settings.debug;
    }
    else if (process.env.NODE_ENV === 'development') {
        debugMode = true;
    }
    let quiet = false;
    if (settings && settings.quiet !== undefined) {
        quiet = settings.quiet;
    }
    return async (ctx, next) => {
        try {
            await next();
        }
        catch (e) {
            let status;
            let clientError = false;
            let title = e.message;
            let detail;
            if (http_errors_1.isHttpError(e)) {
                status = e.httpStatus;
                clientError = http_errors_1.isClientError(e);
                if (e.title) {
                    title = e.title;
                }
                if (e.detail) {
                    detail = e.detail;
                }
            }
            else {
                status = 500;
                if (!debugMode) {
                    title = 'Internal Server Error';
                }
            }
            ctx.response.status = status;
            ctx.response.headers.set('Content-Type', 'application/problem+json');
            // 401 errors
            if (e.wwwAuthenticate) {
                ctx.response.headers.set('WWW-Authenticate', e.wwwAuthenticate);
            }
            // 405 errors
            if (e.allow) {
                ctx.response.headers.set('Allow', e.allow.join(', '));
            }
            // 413, 429 or 504 errors
            if (e.retryAfter) {
                ctx.response.headers.set('Retry-After', e.retryAfter);
            }
            ctx.response.body = {
                title,
                status
            };
            if (detail) {
                ctx.response.body.detail = detail;
            }
            if (clientError) {
                if (!quiet) {
                    /* eslint-disable no-console */
                    console.warn(e);
                }
            }
            else {
                // tslint:disable-next-line no-console
                console.error(e);
            }
        }
    };
}
exports.default = default_1;
//# sourceMappingURL=index.js.map